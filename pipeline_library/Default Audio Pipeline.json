{
  "name": "Default Audio Pipeline",
  "description": "",
  "active": true,
  "configuration": {
    "nodes": [
      {
        "id": "dndnode_0",
        "type": "custom",
        "position": {
          "x": 187,
          "y": 380
        },
        "data": {
          "nodeId": "trigger_ingest_completed",
          "label": "Ingest Completed (trigger)",
          "description": "This step will trigger after ingest is completed",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["any"],
          "outputTypes": [
            {
              "name": "any",
              "description": "Output type: any"
            }
          ],
          "type": "TRIGGER",
          "configuration": {
            "path": "",
            "operationId": "",
            "method": "trigger",
            "parameters": {
              "Prefix": "",
              "Format": "WAV, AIFF, AIF, MP3, PCM, M4A"
            },
            "requestMapping": null,
            "responseMapping": null
          }
        },
        "width": 200,
        "height": 100
      },
      {
        "id": "dndnode_1",
        "type": "custom",
        "position": {
          "x": 448,
          "y": 384
        },
        "data": {
          "nodeId": "audio_metadata_extractor",
          "label": "Audio Metadata Extractor (extract)",
          "description": "Extract metadata from audio files stored in S3",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["audio"],
          "outputTypes": [
            {
              "name": "metadata",
              "description": "Output type: metadata"
            }
          ],
          "type": "UTILITY",
          "configuration": {
            "path": "",
            "operationId": "extractAudioMetadata",
            "method": "extract",
            "parameters": {}
          }
        },
        "width": 200,
        "height": 100
      },
      {
        "id": "dndnode_3",
        "type": "custom",
        "position": {
          "x": 176,
          "y": 576
        },
        "data": {
          "nodeId": "check_media_convert_status",
          "label": "Check MediaConvert Status (check)",
          "description": "Checks the status of MediaConvert jobs",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["audio"],
          "outputTypes": [
            {
              "name": "status",
              "description": "MediaConvert job status"
            }
          ],
          "type": "UTILITY",
          "configuration": {
            "path": "",
            "operationId": "checkStatus",
            "method": "check",
            "parameters": {
              "MediaConvert Queue Arn": "${MEDIACONVERT_QUEUE_ARN}",
              "MediaConvert Role Arn": "${MEDIACONVERT_ROLE_ARN}"
            }
          }
        },
        "width": 200,
        "height": 100
      },
      {
        "id": "dndnode_5",
        "type": "custom",
        "position": {
          "x": 176,
          "y": 768
        },
        "data": {
          "nodeId": "wait",
          "label": "Wait 1 Minute",
          "description": "A Wait state",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["any"],
          "outputTypes": [
            {
              "name": "wait_complete",
              "description": "Wait completed"
            }
          ],
          "type": "FLOW",
          "configuration": {
            "method": "wait",
            "parameters": {
              "seconds": "60"
            }
          }
        },
        "width": 200,
        "height": 100
      },
      {
        "id": "dndnode_23",
        "type": "custom",
        "position": {
          "x": 704,
          "y": 384
        },
        "data": {
          "nodeId": "audio_proxy",
          "label": "Audio Proxy (extract) (extract) (extract) (extract)",
          "description": "Create an audio proxy from an audio file stored in S3",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["audio"],
          "outputTypes": [
            {
              "name": "any",
              "description": "Output type: any"
            }
          ],
          "type": "UTILITY",
          "configuration": {
            "path": "",
            "operationId": "",
            "method": "extract",
            "parameters": {
              "MediaConvert Queue Arn": "${MEDIACONVERT_QUEUE_ARN}",
              "output_bucket": "",
              "MediaConvert Role Arn": "${MEDIACONVERT_ROLE_ARN}"
            }
          }
        },
        "width": 200,
        "height": 113
      },
      {
        "id": "dndnode_28",
        "type": "custom",
        "position": {
          "x": 720,
          "y": 576
        },
        "data": {
          "nodeId": "success",
          "label": "Success",
          "description": "This step will end the execution with a success status",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["any"],
          "outputTypes": [],
          "type": "FLOW",
          "configuration": {
            "method": "success",
            "parameters": {}
          }
        },
        "width": 200,
        "height": 113,
        "selected": false,
        "dragging": false
      },
      {
        "id": "dndnode_29",
        "type": "custom",
        "position": {
          "x": 480,
          "y": 576
        },
        "data": {
          "nodeId": "choice",
          "label": "Choice",
          "description": "This step will branch the workflow based on a condition",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["any"],
          "outputTypes": [
            {
              "name": "Completed",
              "description": "Path taken when condition evaluates to true"
            },
            {
              "name": "In Progress",
              "description": "Path taken when condition evaluates to false"
            },
            {
              "name": "Fail",
              "description": "Path taken when condition evaluates to false"
            }
          ],
          "type": "FLOW",
          "configuration": {
            "method": "choice",
            "parameters": {}
          }
        },
        "width": 200,
        "height": 113,
        "selected": false,
        "dragging": false
      },
      {
        "id": "dndnode_30",
        "type": "custom",
        "position": {
          "x": 480,
          "y": 752
        },
        "data": {
          "nodeId": "fail",
          "label": "Fail (fail)",
          "description": "This step will end the state machine execution with a failure status",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "size": 20
            },
            "_owner": null
          },
          "inputTypes": ["any"],
          "outputTypes": [],
          "type": "FLOW",
          "configuration": {
            "method": "fail",
            "parameters": {
              "Error": "Failed",
              "Cause": "Flow step failed"
            },
            "path": "",
            "operationId": ""
          }
        },
        "width": 200,
        "height": 113,
        "selected": true,
        "dragging": false
      }
    ],
    "edges": [
      {
        "id": "dndnode_0-dndnode_1",
        "source": "dndnode_0",
        "target": "dndnode_1",
        "type": "custom",
        "data": {
          "type": "custom",
          "text": "to Audio Metadata",
          "id": "dndnode_0-dndnode_1"
        },
        "sourceHandle": "audio",
        "targetHandle": "input-audio"
      },
      {
        "id": "dndnode_1-dndnode_23",
        "source": "dndnode_1",
        "target": "dndnode_23",
        "type": "custom",
        "data": {
          "type": "custom",
          "text": "Connected",
          "id": "dndnode_1-dndnode_23"
        },
        "sourceHandle": "metadata",
        "targetHandle": "input-audio"
      },
      {
        "id": "dndnode_23-dndnode_3",
        "source": "dndnode_23",
        "target": "dndnode_3",
        "type": "custom",
        "data": {
          "type": "custom",
          "text": "Connected",
          "id": "dndnode_23-dndnode_3"
        },
        "sourceHandle": "any",
        "targetHandle": "input-audio"
      },
      {
        "id": "dndnode_5-dndnode_3",
        "source": "dndnode_5",
        "target": "dndnode_3",
        "type": "custom",
        "data": {
          "type": "custom",
          "text": "Connected",
          "id": "dndnode_5-dndnode_3"
        },
        "sourceHandle": "wait_complete",
        "targetHandle": "input-audio"
      },
      {
        "source": "dndnode_3",
        "sourceHandle": "status",
        "target": "dndnode_29",
        "targetHandle": "input-any",
        "id": "dndnode_3-dndnode_29",
        "type": "custom",
        "data": {
          "text": "Connected"
        }
      },
      {
        "source": "dndnode_29",
        "sourceHandle": "Completed",
        "target": "dndnode_28",
        "targetHandle": "input-any",
        "id": "dndnode_29-dndnode_28",
        "type": "custom",
        "data": {
          "text": "Connected"
        }
      },
      {
        "source": "dndnode_29",
        "sourceHandle": "In Progress",
        "target": "dndnode_5",
        "targetHandle": "input-any",
        "id": "dndnode_29-dndnode_5",
        "type": "custom",
        "data": {
          "text": "Connected"
        }
      },
      {
        "source": "dndnode_29",
        "sourceHandle": "Fail",
        "target": "dndnode_30",
        "targetHandle": "input-any",
        "id": "dndnode_29-dndnode_30",
        "type": "custom",
        "data": {
          "text": "Connected"
        }
      }
    ],
    "settings": {
      "autoStart": false,
      "retryAttempts": 3,
      "timeout": 3600
    }
  }
}
