spec: v1.0.0
node:
  id: s3_vector_store
  title: S3 Vectors
  description: Store and retrieve vector embeddings using S3 Vectors
  version: 1.0.0
  type: utility
  integration:
    config:
      lambda:
        handler: utility/S3VectorStoreLambdaDeployment
        runtime: python3.12
        iam_policy:
          statements:
            - effect: Allow
              actions:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              resources:
                - "*"
            - effect: Allow
              actions:
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
                - s3:ListBucket
              resources:
                - "*"
            - effect: Allow
              actions:
                - kms:Decrypt
                - kms:Encrypt
                - kms:GenerateDataKey
              resources:
                - "*"
            - effect: Allow
              actions:
                - s3vectors:GetVectorBucket
                - s3vectors:CreateVectorBucket
                - s3vectors:GetIndex
                - s3vectors:CreateIndex
                - s3vectors:PutVectors
                - s3vectors:QueryVectors
                - s3vectors:DeleteVectors
              resources:
                - "*"
            - effect: Allow
              actions:
                - secretsmanager:GetSecretValue
              resources:
                - "*"
actions:
  store:
    summary: Store Vector Embeddings
    description: Store vector embeddings in S3 with metadata
    operationId: storeVectorEmbeddings
    parameters:
      - in: body
        name: Vector Bucket Name
        required: true
        default: ${VECTOR_BUCKET_NAME}
        schema:
          type: string
      - in: body
        name: Index Name
        required: true
        default: ${INDEX_NAME}
        schema:
          type: string
      - in: body
        name: Vector Dimension
        required: false
        default: ${VECTOR_DIMENSION}
        schema:
          type: integer
    x-requestMapping: utility/S3VectorStoreLambdaDeployment/store/
    x-responseMapping: utility/S3VectorStoreLambdaDeployment/store/
    connections:
      incoming:
        type: [any]
