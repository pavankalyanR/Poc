openapi: 3.1.0
info:
  title: Media Management Collections API
  version: 1.0.0
  description: |
    Collections management API supporting nested collections, items, ownership, and metadata.
servers:
  - url: https://api.example.com

paths:
  /collections:
    post:
      summary: Create a new collection
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CollectionCreateRequest"
      responses:
        "201":
          description: Collection created successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionCreateResponse"

    get:
      summary: List collections (supports nested collections)
      parameters:
        - $ref: "#/components/parameters/pageNumber"
        - $ref: "#/components/parameters/pageSize"
        - name: type
          in: query
          schema:
            type: string
          description: Filter by collection type (e.g. project, task)
        - name: ownerId
          in: query
          schema:
            type: string
          description: Filter by owner user ID
        - name: favorite
          in: query
          schema:
            type: boolean
          description: Filter to only favorite collections
      responses:
        "200":
          description: Collections retrieved successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionListResponse"

  /collections/{collectionId}:
    parameters:
      - name: collectionId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get detailed info about a collection including nested collections and items
      responses:
        "200":
          description: Collection details retrieved
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionDetailResponse"

    patch:
      summary: Update collection attributes or metadata
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CollectionUpdateRequest"
      responses:
        "200":
          description: Collection updated successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionUpdateResponse"

    delete:
      summary: Delete a collection
      responses:
        "204":
          description: Collection deleted successfully

  /collections/{collectionId}/items:
    parameters:
      - name: collectionId
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Add multiple items (assets) to a collection
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CollectionItemsAddRequest"
      responses:
        "200":
          description: Items added successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionItemsAddResponse"

  /collections/{collectionId}/children:
    parameters:
      - name: collectionId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: List direct nested collections (children) inside a collection
      responses:
        "200":
          description: Nested collections retrieved
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionListResponse"

  /collections/{collectionId}/share:
    parameters:
      - name: collectionId
        in: path
        required: true
        schema:
          type: string

    post:
      summary: Share a collection with a user and assign role
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ShareCollectionRequest"
      responses:
        "200":
          description: Collection shared successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ShareCollectionResponse"

    get:
      summary: List all users with whom collection is shared
      responses:
        "200":
          description: Shared users retrieved
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ListSharedUsersResponse"

  /collections/shared-with-me:
    get:
      summary: List collections shared with the current user
      responses:
        "200":
          description: Collections shared with user retrieved
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CollectionListResponse"

  /collections/{collectionId}/favorite:
    parameters:
      - name: collectionId
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Mark a collection as favorite
      responses:
        "200":
          description: Collection marked as favorite
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FavoriteResponse"
    delete:
      summary: Remove a collection from favorites
      responses:
        "200":
          description: Collection removed from favorites
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FavoriteResponse"

components:
  parameters:
    pageNumber:
      name: page[number]
      in: query
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Page number for pagination
    pageSize:
      name: page[size]
      in: query
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
      description: Page size for pagination

  schemas:
    # -- Resource Object for Collection Creation (Request) --
    CollectionCreateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum: [collections]
              description: Resource type, must be 'collections'
            attributes:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                type:
                  type: string
                  description: Custom type of collection (e.g. project, task)
                meta:
                  type: object
                  additionalProperties: true
            relationships:
              type: object
              properties:
                owner:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - type
                        - id
                      properties:
                        type:
                          type: string
                          enum: [users]
                          description: Owner resource type
                        id:
                          type: string
                parent:
                  type: object
                  properties:
                    data:
                      type: object
                      nullable: true
                      properties:
                        type:
                          type: string
                          enum: [collections]
                        id:
                          type: string

    # -- Collection Creation Response --
    CollectionCreateResponse:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: Collection created successfully
        data:
          $ref: "#/components/schemas/CollectionResource"

    # -- Collection Resource Object --
    CollectionResource:
      type: object
      required:
        - type
        - id
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum: [collections]
        id:
          type: string
        attributes:
          type: object
          required:
            - name
            - createdAt
            - updatedAt
          properties:
            name:
              type: string
            type:
              type: string
              description: User defined collection type
            meta:
              type: object
              additionalProperties: true
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        relationships:
          type: object
          properties:
            owner:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum: [users]
                    id:
                      type: string
            parent:
              type: object
              properties:
                data:
                  oneOf:
                    - type: "null"
                    - type: object
                      required:
                        - type
                        - id
                      properties:
                        type:
                          type: string
                          enum: [collections]
                        id:
                          type: string
            children:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum: [collections]
                      id:
                        type: string
          additionalProperties: false
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              format: uri

    # -- List Collections Response --
    CollectionListResponse:
      type: object
      required:
        - meta
        - data
        - links
      properties:
        meta:
          type: object
          required:
            - status
            - message
            - total
            - page
            - limit
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Collections retrieved successfully
            total:
              type: integer
            page:
              type: integer
            limit:
              type: integer
        data:
          type: array
          items:
            $ref: "#/components/schemas/CollectionResource"
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              format: uri
            next:
              type: string
              format: uri

    # -- Get Collection Details Response --
    CollectionDetailResponse:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Collection fetched successfully
        data:
          $ref: "#/components/schemas/CollectionResourceWithItems"

    # -- Collection Resource Object including nested items and children with included --
    CollectionResourceWithItems:
      allOf:
        - $ref: "#/components/schemas/CollectionResource"
        - type: object
          properties:
            relationships:
              type: object
              properties:
                items:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        required:
                          - type
                          - id
                        properties:
                          type:
                            type: string
                            enum: [assets]
                          id:
                            type: string
                    links:
                      type: object
                      properties:
                        related:
                          type: string
                          format: uri
                children:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        required:
                          - type
                          - id
                        properties:
                          type:
                            type: string
                            enum: [collections]
                          id:
                            type: string
                    links:
                      type: object
                      properties:
                        related:
                          type: string
                          format: uri
            additionalProperties: false

    # -- Update Collection Request --
    CollectionUpdateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              enum: [collections]
            id:
              type: string
            attributes:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                meta:
                  type: object
                  additionalProperties: true

    # -- Update Collection Response --
    CollectionUpdateResponse:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Collection updated successfully
        data:
          $ref: "#/components/schemas/CollectionResource"

    # -- Collection Items Add Request --
    CollectionItemsAddRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - type
              - id
            properties:
              type:
                type: string
                enum: [assets]
              id:
                type: string

    # -- Collection Items Add Response --
    CollectionItemsAddResponse:
      type: object
      required:
        - meta
        - data
        - links
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Items added successfully
        data:
          type: array
          items:
            type: object
            required:
              - type
              - id
            properties:
              type:
                type: string
                enum: [assets]
              id:
                type: string
        links:
          type: object
          properties:
            self:
              type: string
              format: uri

    # -- Share Collection Request --
    ShareCollectionRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
            - relationships
          properties:
            type:
              type: string
              enum: [collection-shares]
              description: Resource type
            attributes:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [viewer, editor, admin]
            relationships:
              type: object
              required:
                - user
                - collection
              properties:
                user:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - type
                        - id
                      properties:
                        type:
                          type: string
                          enum: [users]
                        id:
                          type: string
                collection:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - type
                        - id
                      properties:
                        type:
                          type: string
                          enum: [collections]
                        id:
                          type: string

    # -- Share Collection Response --
    ShareCollectionResponse:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Collection shared successfully
        data:
          type: object
          required:
            - type
            - id
            - attributes
            - relationships
          properties:
            type:
              type: string
              enum: [collection-shares]
            id:
              type: string
            attributes:
              type: object
              required:
                - role
                - sharedAt
              properties:
                role:
                  type: string
                sharedAt:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                        id:
                          type: string
                collection:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                        id:
                          type: string

    # -- List Shared Users Response --
    ListSharedUsersResponse:
      type: object
      required:
        - meta
        - sharedWith
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Shared users retrieved successfully
        sharedWith:
          type: array
          items:
            type: object
            required:
              - userId
              - role
              - sharedAt
            properties:
              userId:
                type: string
              role:
                type: string
              sharedAt:
                type: string
                format: date-time

    # -- Favorite Response --
    FavoriteResponse:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Collection favorite toggled
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              enum: [collections]
            id:
              type: string
            attributes:
              type: object
              properties:
                favorite:
                  type: boolean
